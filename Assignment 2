//C CODE :-
#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

int main() {
    struct Node *head = NULL, *temp, *newNode;
    int n, data, pos, i;

    // Create initial linked list
    printf("Enter number of nodes: ");
    scanf("%d", &n);
    for (i = 0; i < n; i++) {
        printf("Enter data for node %d: ", i + 1);
        newNode = malloc(sizeof(struct Node));
        scanf("%d", &newNode->data);
        newNode->next = NULL;
        if (head == NULL)
            head = newNode;
        else {
            temp = head;
            while (temp->next != NULL)
                temp = temp->next;
            temp->next = newNode;
        }
    }

    // Insert in middle
    printf("Enter position to insert (1-based index): ");
    scanf("%d", &pos);
    printf("Enter data to insert: ");
    scanf("%d", &data);

    newNode = malloc(sizeof(struct Node));
    newNode->data = data;

    temp = head;
    for (i = 1; i < pos - 1 && temp != NULL; i++)
        temp = temp->next;

    if (temp == NULL) {
        printf("Position out of range!\n");
    } else {
        newNode->next = temp->next;
        temp->next = newNode;
    }

    // Display list
    printf("Updated Linked List: ");
    temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");

    return 0;
}


































#PYTHON CODE :-
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

# Function to display linked list
def display(head):
    temp = head
    while temp:
        print(temp.data, end=" -> ")
        temp = temp.next
    print("NULL")

# Create initial linked list
n = int(input("Enter number of nodes: "))
head = None
for i in range(n):
    data = int(input(f"Enter data for node {i+1}: "))
    new_node = Node(data)
    if head is None:
        head = new_node
    else:
        temp = head
        while temp.next:
            temp = temp.next
        temp.next = new_node

# Insert in middle
pos = int(input("Enter position to insert (1-based index): "))
data = int(input("Enter data to insert: "))

new_node = Node(data)
temp = head
for i in range(1, pos - 1):
    if temp is None:
        print("Position out of range!")
        break
    temp = temp.next
else:
    new_node.next = temp.next
    temp.next = new_node

# Display updated list
print("Updated Linked List:")
display(head)
